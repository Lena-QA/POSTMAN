{
	"info": {
		"_postman_id": "afa1d2fe-8611-418b-a859-682bf7b4575e",
		"name": "Postman HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "First",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос get http://162.55.220.72:5005/first.\r",
							"\r",
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//3. Проверить, что в body приходит правильный string.\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "Elena",
							"type": "default",
							"disabled": true
						},
						{
							"key": "password",
							"value": "12345",
							"type": "default",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос.\r",
							"//Post http://162.55.220.72:5005/user_info_3\r",
							"\r",
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"let responseData = pm.response.json();\r",
							"\r",
							"// 4. Проверить, что name в ответе равно name в request (name вбить руками.)\r",
							"pm.test(\"Сheck name\", function () {\r",
							"       pm.expect(responseData.name).to.eql(\"Lena\");\r",
							"});\r",
							"\r",
							"//5. Проверить, что age в ответе равно age в request (age вбить руками.)\r",
							"pm.test(\"Check age\", function () {\r",
							"        pm.expect(responseData.age).to.eql+(33);\r",
							"});\r",
							"\r",
							"//6. Проверить, что salary в ответе равно salary в request (salary вбить руками.)\r",
							"pm.test(\"Check salary\", function () {\r",
							"    pm.expect(responseData.salary).to.eql(1000);\r",
							"});\r",
							"\r",
							"//7. Спарсить request.\r",
							"let requestData = request.data;\r",
							"console.log(requestData)\r",
							"\r",
							"//8. Проверить, что name в ответе равно name в request (name забрать из request.)\r",
							"pm.test(\"Check name = Lena\", function () {\r",
							"    pm.expect(requestData.name).to.eql(responseData.name);\r",
							"});\r",
							"\r",
							"//9. Проверить, что age в ответе равно age в request (age забрать из request.)\r",
							"pm.test(\"Check age = 33\", function () {\r",
							"    pm.expect(requestData.age).to.eql +(responseData.age);\r",
							"});\r",
							"\r",
							"//10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Your salary = 1000\", function () {\r",
							"    pm.expect(requestData.salary).to.eql+(responseData.salary)\r",
							"});\r",
							"\r",
							"//11.Вывести в консоль параметр family из response.\r",
							"let family = responseData.family;\r",
							"console.log(family)\r",
							"\r",
							"//12.Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							" \r",
							"pm.test(\"Check u_salary_1_5_year\", function () {\r",
							"       pm.expect(requestData.u_salary_1_5_year).to.eql+(responseData.salary*4);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Lena",
							"type": "default"
						},
						{
							"key": "age",
							"value": "33",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "default"
						},
						{
							"key": "auth_token ",
							"value": "/s34lfgbj/Elena/jjd909/60236kjkWpqc460112345155798evny",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос.\r",
							"//Get http://162.55.220.72:5005/object_info_3\r",
							"\r",
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//3. Спарсить response body в json.\r",
							"let responseData = pm.response.json();\r",
							"\r",
							"//4. Спарсить request.\r",
							"let requestData = pm.request.url.query.toObject();\r",
							"\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Check name\", function () {\r",
							"        pm.expect(responseData.name).to.eql(requestData.name);\r",
							"});\r",
							"// 6. Проверить, что age в ответе равно age в request (age забрать из request.)\r",
							"pm.test(\"Check age\", function () {\r",
							"        pm.expect(responseData.age).to.eql+(requestData.age);\r",
							"});\r",
							"\r",
							"//7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Check salary\", function () {\r",
							"        pm.expect(responseData.salary).to.eql+(requestData.salary);\r",
							"});\r",
							"//8. Вывести в консоль параметр family из response\r",
							"let family = responseData.family;\r",
							"console.log(family)\r",
							"\r",
							"// 9. Проверить, что у параметра dog есть параметры name.\r",
							"pm.test(\"Check dog's name\", function () {\r",
							"       pm.expect(responseData.family.pets.dog).to.have.property (\"name\");\r",
							"});\r",
							"//10. Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"Check dog's age\", function () {\r",
							"       pm.expect(responseData.family.pets.dog).to.have.property (\"age\");\r",
							"    });\r",
							"//11. Проверить, что параметр name имеет значение Luky.\r",
							"pm.test(\"Check name Luky\", function () {\r",
							"         pm.expect(responseData.family.pets.dog.name).to.eql(\"Luky\"); \r",
							"     });\r",
							"\r",
							"    //12. Проверить, что параметр age имеет значение 4. \r",
							"    pm.test(\"Check age\", function () {\r",
							"       pm.expect(responseData.family.pets.dog.age).to.eql(4); \r",
							"     });"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Lena",
							"type": "default",
							"disabled": true
						},
						{
							"key": "age ",
							"value": "33",
							"type": "default",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "default",
							"disabled": true
						},
						{
							"key": "auth_token ",
							"value": "/s34lfgbj/Elena/jjd909/60236kjkWpqc460112345155798evny",
							"type": "default",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Lena&salary=1000&age=33&auth_token=/s34lfgbj/Elena/jjd909/60236kjkWpqc460112345155798evny",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Lena"
						},
						{
							"key": "salary",
							"value": "1000"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "auth_token",
							"value": "/s34lfgbj/Elena/jjd909/60236kjkWpqc460112345155798evny"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос\r",
							"//Get http://162.55.220.72:5005/object_info_4\r",
							"\r",
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"let responseData = pm.response.json()\r",
							"// or let responseData = JSON.parse(responseBody)\r",
							"\r",
							"//4. Спарсить request.\r",
							"let requestData = pm.request.url.query.toObject();\r",
							"\r",
							"//5. Проверить, что name в ответе равно name в request (name забрать из request.)\r",
							"pm.test(\"Check name\", function () {\r",
							"       pm.expect(responseData.name).to.eql(requestData.name);\r",
							"    });\r",
							"\r",
							"//6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"    pm.test(\"Check age\", function () {\r",
							"       pm.expect(responseData.age).to.eql+(requestData.age);\r",
							"    });\r",
							"//7. Вывести в консоль параметр salary из request.\r",
							"    let salary = requestData.salary;\r",
							"    console.log(salary)\r",
							"\r",
							"//8. Вывести в консоль параметр salary из response.\r",
							"    let salary1 = responseData.salary;\r",
							"    console.log(salary1)\r",
							"//9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"    let salary_0 = responseData.salary[0];\r",
							"    console.log(salary_0)\r",
							"\r",
							"//10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"    let salary_1 = responseData.salary[1];\r",
							"    console.log(salary_1)\r",
							"\r",
							"//11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"    let salary_2 = responseData.salary[2];\r",
							"    console.log(salary_2)\r",
							"\r",
							"//12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request)\r",
							"\r",
							"pm.test(\"Check salary_0\", function () {\r",
							"    pm.expect(responseData.salary[0]).to.be.eql+(requestData.salary);\r",
							"});\r",
							"\r",
							"//13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"Check salary*2\", function () {\r",
							"pm.expect(responseData.salary[1]).to.be.eql+(requestData.salary*2);\r",
							"});\r",
							"\r",
							"//14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test(\"Check salary*3\", function () {\r",
							"pm.expect(responseData.salary[2]).to.be.eql+(requestData.salary*3);\r",
							"});\r",
							"\r",
							"//15-17. Создать в окружении переменную name, age, salary\r",
							"// Environment > create new environment > add a new variable \r",
							"\r",
							"//18. Передать в окружение переменную name\r",
							"let name_7 = requestData.name;\r",
							"    pm.environment.set(\"name_7\", name_7);\r",
							"\r",
							"// 19. Передать в окружение переменную age\r",
							"let age_7 = requestData.age;\r",
							"   pm.environment.set(\"age_7\", age_7);\r",
							"\r",
							"//20. Создать в окружении переменную salary\r",
							"let salary_7 = requestData.salary;\r",
							"   pm.environment.set(\"salary_7\", salary_7);\r",
							"\r",
							"//21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"\r",
							"let salaryData = responseData.salary\r",
							"for (i = 0; i < 3; i++) {\r",
							"    console.log(salaryData[i])\r",
							"    }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Lena&age=33&salary=1000&auth_token=/s34lfgbj/Elena/jjd909/60236kjkWpqc460112345155798evny",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Lena"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "salary",
							"value": "1000"
						},
						{
							"key": "auth_token",
							"value": "/s34lfgbj/Elena/jjd909/60236kjkWpqc460112345155798evny"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Post http://162.55.220.72:5005/user_info_2\r",
							"\r",
							"//1. Вставить параметр salary из окружения в request {{salary_7}}\r",
							"//2. Вставить параметр age из окружения в age {{age_7}}\r",
							"//3. Вставить параметр name из окружения в name {{name_7}}\r",
							"\r",
							"//4. //Post http://162.55.220.72:5005/user_info_2\r",
							"\r",
							"//5. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//6. Спарсить response body в json.\r",
							"let responseData = pm.response.json();\r",
							"\r",
							"//7. Спарсить request.\r",
							"let requestData = request.data; \r",
							"\r",
							"//8. Проверить, что json response имеет параметр start_qa_salary\r",
							"pm.test(\"Check start_qa_salary\", function (){\r",
							"pm.expect (responseData).to.have.property(\"start_qa_salary\")\r",
							"}); \r",
							"//или\r",
							"//pm.test(\"Check start_qa_salary\", function (){\r",
							"//pm.response.to.have.jsonBody(\"start_qa_salary\")\r",
							"//});\r",
							"\r",
							"//9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"pm.test(\"Check qa_salary_after_6_months\", function () {\r",
							"    pm.expect(responseData).to.have.property(\"qa_salary_after_6_months\")\r",
							"});\r",
							"\r",
							"//10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"pm.test(\"Check qa_salary_after_12_months\", function () {\r",
							"   // pm.expect(responseData).to.have.property (\"qa_salary_after_12_months\")\r",
							"\r",
							"});\r",
							"\r",
							"//11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"\r",
							"pm.test(\"Check qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(responseData).to.have.property (\"qa_salary_after_1.5_year\")\r",
							"});\r",
							"\r",
							"//12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"\r",
							"pm.test(\"Check qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(responseData).to.have.property (\"qa_salary_after_3.5_years\")\r",
							"});\r",
							"\r",
							"//13. Проверить, что json response имеет параметр person\r",
							"pm.test(\"Check person\", function () {\r",
							"    pm.expect(responseData).to.have.property(\"person\")\r",
							"});\r",
							"\r",
							"//14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"Check start_qa_salary\", function () {\r",
							"   pm.expect(responseData.start_qa_salary).to.be.eql+(requestData.salary)\r",
							"});\r",
							"\r",
							"//15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request).\r",
							"pm.test(\"Check qa_salary_after_6_months\", function () {\r",
							"   pm.expect (responseData.qa_salary_after_6_months).to.be.eql+(requestData.salary*2)\r",
							"});\r",
							"\r",
							"//16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request).\r",
							"pm.test(\"Check qa_salary_after_12_months\", function () {\r",
							"    pm.expect (responseData.qa_salary_after_12_months).to.be.eql+(requestData.salary*2.7)\r",
							"});\r",
							"\r",
							"//17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request)\r",
							"pm.test(\"Check qa_salary_after_12_months\", function () {\r",
							"    pm.expect (\"qa_salary_after_(1.5_months\").to.be.eql+(requestData.salary*3.3)\r",
							"});  \r",
							"\r",
							"//18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request).\r",
							"pm.test(\"Check qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(\"qa_salary_after_3.5_years\").to.be.eql+(requestData.salary*3.8)\r",
							"});\r",
							"\r",
							"//19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request).\r",
							"pm.test(\"Check u_name\", function() {\r",
							"    pm.expect(responseData.person.u_name[1]).to.be.eql+(requestData.salary)\r",
							"});\r",
							"\r",
							"//20. Проверить, что параметр u_age равен age из request (age забрать из request).\r",
							"pm.test(\"Check u_age\", function () {\r",
							"    pm.expect(responseData.u_age).to.be.eql+(requestData.age)\r",
							"});\r",
							"\r",
							"//21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request).\r",
							"pm.test(\"Check u_salary_5_years\", function (){\r",
							"    pm.expect(responseData.u_salary_5_years).to.be.eql+(requestData.salary*4.2)\r",
							"});\r",
							"\r",
							"//22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"\r",
							"let person = responseData.person;\r",
							"for (let key in person) {\r",
							"   console.log(key, responseData.person[key])\r",
							"   }\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "salary",
							"value": "{{salary_7}}",
							"type": "default"
						},
						{
							"key": "age",
							"value": "{{age_7}}",
							"type": "default"
						},
						{
							"key": "name",
							"value": "{{name_7}}",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}